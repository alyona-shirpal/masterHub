{"version":3,"file":"service-type.service.js","sourceRoot":"","sources":["../../../src/services/service-type/service-type.service.ts"],"names":[],"mappings":";;;AACA,yEAAoE;AACpE,2CAA6C;AAE7C,MAAM,kBAAkB;IACpB,KAAK,CAAC,iBAAiB,CAAC,iBAAwC,EAAE,UAAkB;QAChF,MAAM,kBAAkB,GAAG,MAAM,qCAAgB,CAAC,MAAM,CAAC;YACrD,UAAU;YACV,GAAG,iBAAiB;SACvB,CAAC,CAAC;QAEH,MAAM,sBAAY,CAAC,iBAAiB,CAChC,UAAU,EACV;YACI,SAAS,EAAE,EAAC,IAAI,EAAE,kBAAkB,CAAC,GAAG,EAAC;SAC5C,CACJ,CAAC;QAEF,OAAO,kBAAkB,CAAC;IAC9B,CAAC;CACJ;AAEY,QAAA,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC","sourcesContent":["import { IServiceType } from '../../interfaces';\r\nimport { ServiceTypeModel } from '../../schemas/ServiceType.schema';\r\nimport { ServiceModel } from '../../schemas';\r\n\r\nclass ServiceTypeService {\r\n    async createServiceType(serviceTypeObject: Partial<IServiceType>, service_id: string): Promise<IServiceType> {\r\n        const createdServiceType = await ServiceTypeModel.create({\r\n            service_id,\r\n            ...serviceTypeObject\r\n        });\r\n\r\n        await ServiceModel.findByIdAndUpdate(\r\n            service_id,\r\n            {\r\n                $addToSet: {type: createdServiceType._id}\r\n            }\r\n        );\r\n\r\n        return createdServiceType;\r\n    }\r\n}\r\n\r\nexport const serviceTypeService = new ServiceTypeService();"]}